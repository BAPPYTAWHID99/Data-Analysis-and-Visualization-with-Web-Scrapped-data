install.packages("rvest")
install.packages("dplyr")
library("rvest")
library("dplyr")
response = read_html("http://api.scraperapi.com?api_key=51e43be283e4db2a5afb62660xxxxxxx&url=https://datatables.net/examples/basic_init/multiple_tables.html")
response = read_html("http://api.scraperapi.com?api_key=51e43be283e4db2a5afb62660xxxxxxx&url=https://datatables.net/examples/basic_init/multiple_tables.html")
library(rvest)
library(rvest)
url <- "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
my_html <- read_html(url)
my_tables <- html_nodes(my_html,"table")[[1]]
populous_table <- html_table(my_tables)
populous_table <- populous_table[,-4:-6]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
names(populous_table) = c("Rank","Country","Population")
library(lattice)
xyplot(Population ~ as.factor(Country), populous_table[1:10,],
scales = list(x = c(rot=60)),type="h",main="Most Densely Populated Countries")
View(populous_table)
library(rvest)
url <- "https://r-data.pmagunia.com/dataset/r-dataset-package-datasets-usarrests"
my_html <- read_html(url)
my_tables <- html_nodes(my_html,"table")[[1]]
populous_table <- html_table(my_tables)
View(populous_table)
populous_table <- populous_table[,-4:-6]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
View(populous_table)
install.packages("rvest")
install.packages("rvest")
library(rvest)
url <- "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
my_html <- read_html(url)
url <- "https://r-data.pmagunia.com/dataset/r-dataset-package-datasets-usarrests"
my_html <- read_html(url)
my_tables <- html_nodes(my_html,"table")[[2]]
populous_table <- html_table(my_tables)
View(populous_table)
url <- "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
my_html <- read_html(url)
my_tables <- html_nodes(my_html,"table")[[1]]
populous_table <- html_table(my_tables)
populous_table <- populous_table[,-4:-6]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
names(populous_table) = c("Rank","Country","Population")
view(populous_table)
view(populous_table)
library(lattice)
xyplot(Population ~ as.factor(Country), populous_table[1:10,],
scales = list(x = c(rot=60)),type="h",main="Most Densely Populated Countries")
populous_table <- populous_table[,-4:-6]
my_tables <- html_nodes(my_html,"table")[[1]]
populous_table <- html_table(my_tables)
populous_table <- populous_table[,-4:-6]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
names(populous_table) = c("Rank","Country","Population")
View(populous_table)
mean(data$Population,na.rm=TRUE)
library(lattice)
xyplot(Population ~ as.factor(Country), populous_table[1:10,],
scales = list(x = c(rot=60)),type="h",main="Most Densely Populated Countries")
mean(data$Population,na.rm=TRUE)
library(lattice)
xyplot(Population ~ as.factor(Country), populous_table[1:240,],
scales = list(x = c(rot=60)),type="h",main="Most Densely Populated Countries")
mean(data$Rank,na.rm=TRUE)
mean(data$Rank,na.rm=TRUE)
populous_table <- populous_table[,-4:-6]
my_tables <- html_nodes(my_html,"table")[[1]]
populous_table <- html_table(my_tables)
populous_table <- populous_table[,-4:-6]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
names(populous_table) = c("Rank","Country","Population","Historic Information")
dataset$Rank = ifelse(is.na(dataset$Rank),ave(dataset$Rank, FUN = function(x) mean(x, na.rm = 'TRUE')),dataset$Rank)
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank, FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank,
FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank,
FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank,
FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank,
FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank,
FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank,
FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank,
FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank,
FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank,
FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
populous_table$Population <- round(populous_table$Population)
install.packages("glimpse")
populous_table$Rank <- as.numeric(format(round(populous_table$Rank,0)))
populous_table$Population <- round(populous_table$)
install.packages("glimpse")
install.packages("glimpse")
library(rvest)
url <- "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
my_html <- read_html(url)
my_tables <- html_nodes(my_html,"table")[[1]]
populous_table <- html_table(my_tables)
populous_table <- populous_table[,-4:-6]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
names(populous_table) = c("Rank","Country","Population","Historic Information")
View(populous_table)
populous_table <- populous_table[,-4:-6]
library(rvest)
url <- "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
my_tables <- html_nodes(my_html,"table")[[1]]
populous_table <- html_table(my_tables)
populous_table <- populous_table[,-4:-6]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
names(populous_table) = c("Rank","Country","Population","Historic Information")
library(lattice)
xyplot(Population ~ as.factor(Country), populous_table[1:10,],
scales = list(x = c(rot=60)),type="h",main="Most Densely Populated Countries")
populous_table$Rank = ifelse(is.na(populous_table$Rank),ave(populous_table$Rank,
FUN = function(x) mean(x, na.rm = 'TRUE')),populous_table$Rank)
library(lattice)
xyplot(Population ~ as.factor(Country), populous_table[1:10,],
scales = list(x = c(rot=60)),type="h",main="Most Densely Populated Countries")
library(lattice)
xyplot(Population ~ as.factor(Country), populous_table[1:50,],
scales = list(x = c(rot=60)),type="h",main="Most Densely Populated Countries")
